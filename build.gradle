apply plugin: 'war'
apply from: 'https://raw.githubusercontent.com/akhikhl/gretty/v1.1.9/pluginScripts/gretty.plugin'

version = '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.springframework:spring-webmvc:4.1.4.RELEASE'
	compile 'commons-fileupload:commons-fileupload:1.3.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.4'
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.4'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.4'
	compile 'org.zapodot:jackson-databind-java-optional:2.4.3'
	compile 'javax.servlet:javax.servlet-api:3.1.0'

	compile 'com.google.guava:guava:18.0'
	compile 'org.apache.commons:commons-lang3:3.3.2'
	compile 'joda-time:joda-time:2.6'
	compile 'org.jadira.usertype:usertype.core:3.2.0.GA'

	compile 'org.projectlombok:lombok:1.14.8'
	compile 'ch.qos.logback:logback-classic:1.1.2'
	compile 'org.slf4j:jcl-over-slf4j:1.7.10'

	compile 'com.mchange:c3p0:0.9.2.1'
	compile 'org.hibernate:hibernate-entitymanager:4.3.7.Final'
	compile 'com.h2database:h2:1.4.184'
	compile 'org.springframework:spring-tx:4.1.4.RELEASE'
	compile 'org.springframework:spring-orm:4.1.4.RELEASE'
	compile 'cglib:cglib-nodep:3.1'

	compile 'org.eclipse.jetty:jetty-server:9.3.0.M1'
	compile 'org.eclipse.jetty:jetty-rewrite:9.3.0.M1'
	compile 'org.apache.httpcomponents:httpclient:4.3.5'


	compile 'org.jsoup:jsoup:1.8.1'
	compile 'commons-io:commons-io:2.4'
	compile 'net.sourceforge.cssparser:cssparser:0.9.14'

	testCompile 'org.hamcrest:hamcrest-all:1.3'
	testCompile 'com.jayway.jsonpath:json-path-assert:1.2.0'
	testCompile 'org.skyscreamer:jsonassert:1.2.3'
	testCompile 'org.testng:testng:6.8.13'
	testCompile 'org.springframework:spring-test:4.1.4.RELEASE'
	testCompile 'org.mockito:mockito-all:1.10.17'
	testCompile 'org.assertj:assertj-core:1.7.0'
	testCompile 'com.googlecode.catch-exception:catch-exception:1.2.0'
	testCompile('com.googlecode.catch-exception:catch-exception:1.2.0') {
		exclude module: 'hamcrest-core:'
	}
}

test {
	useTestNG()
	testLogging.showStandardStreams = true

	beforeTest { descriptor ->
		logger.lifecycle("Running test: " + descriptor)
	}
}

gretty {
	contextPath = '/'
	jvmArgs = ['-Xmx256m']
	scanInterval = 5
	servicePort = 9901
	statusPort = 9902
	fastReload = false
}
