buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE')
	}
}

apply plugin: 'spring-boot'
mainClassName = "com.pchudzik.docs.infrastructure.ApplicationConfiguration"

version = '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

sourceSets {
	generated {
		java {
			srcDirs = ['src/main/generated']
		}
	}
}

configurations {
	querydslapt
}

def queryDslVersion = "3.6.2"
def jettyVersion = "9.3.0.M1"
def springVersion = "4.1.4.RELEASE"
def springBootVersion = "1.2.2.RELEASE"
def jacksonVersion = "2.4.5"

dependencies {
	compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"

	compile "commons-fileupload:commons-fileupload:1.3.1"
	compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
	compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
	compile "org.zapodot:jackson-databind-java-optional:$jacksonVersion"
	compile "javax.servlet:javax.servlet-api:3.1.0"

	compile "com.google.guava:guava:18.0"
	compile "org.apache.commons:commons-lang3:3.3.2"
	compile "joda-time:joda-time:2.6"
	compile "org.jadira.usertype:usertype.core:3.2.0.GA"

	compile "org.projectlombok:lombok:1.14.8"
	compile "ch.qos.logback:logback-classic:1.1.2"
	compile "org.slf4j:jcl-over-slf4j:1.7.10"

	compile "com.mchange:c3p0:0.9.2.1"
	compile "org.hibernate:hibernate-entitymanager:4.3.7.Final"
	compile "com.h2database:h2:1.4.184"
	compile "org.springframework:spring-tx:$springVersion"
	compile "org.springframework:spring-orm:$springVersion"
	compile "cglib:cglib-nodep:3.1"

	compile "org.eclipse.jetty:jetty-server:$jettyVersion"
	compile "org.eclipse.jetty:jetty-rewrite:$jettyVersion"
	compile "org.apache.httpcomponents:httpclient:4.3.5"


	compile "org.jsoup:jsoup:1.8.1"
	compile "commons-io:commons-io:2.4"
	compile "net.sourceforge.cssparser:cssparser:0.9.14"

	compile "com.mysema.querydsl:querydsl-jpa:$queryDslVersion"
	querydslapt "com.mysema.querydsl:querydsl-apt:$queryDslVersion"

	testCompile "org.hamcrest:hamcrest-all:1.3"
	testCompile "com.jayway.jsonpath:json-path-assert:1.2.0"
	testCompile "org.skyscreamer:jsonassert:1.2.3"
	testCompile "org.testng:testng:6.8.13"
	testCompile "org.springframework:spring-test:$springVersion"
	testCompile "org.mockito:mockito-all:1.10.17"
	testCompile "org.assertj:assertj-core:1.7.0"
	testCompile("com.googlecode.catch-exception:catch-exception:1.2.0") {
		exclude module: "hamcrest-core:"
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	source = sourceSets.main.java
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [ "-proc:only", "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor" ]
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}

compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

clean {
	delete sourceSets.generated.java.srcDirs
}

test {
	useTestNG()
	testLogging.showStandardStreams = true

	beforeTest { descriptor ->
		logger.lifecycle("Running test: " + descriptor)
	}
}
